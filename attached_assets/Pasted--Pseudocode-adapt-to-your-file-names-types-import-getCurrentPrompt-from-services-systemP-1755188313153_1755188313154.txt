// Pseudocode — adapt to your file names/types
import { getCurrentPrompt } from '../services/systemPrompt'; // wherever you load the dashboard prompt

function toAbs(url?: string) {
  if (!url) return undefined;
  return /^https?:\/\//i.test(url) ? url : `${process.env.PUBLIC_ASSETS_BASE || ''}${url.startsWith('/') ? '' : '/'}${url}`;
}

export function buildUnifiedMessages({
  currentPromptText,          // the “Current Prompt” from dashboard
  injectText,                 // e.g. 'Always include "debugPromptId":"UP-123" ...'
  target,                     // { filename, depthMapPath, edgeMapPath, gradientMapPath }
  similars,                   // array of { chart: { filename, depthMapPath, edgeMapPath, gradientMapPath, ... }, similarity }
}: {
  currentPromptText: string;
  injectText?: string;
  target: { filename?: string; depthMapPath?: string; edgeMapPath?: string; gradientMapPath?: string; };
  similars: Array<{ chart: { filename?: string; depthMapPath?: string; edgeMapPath?: string; gradientMapPath?: string; timeframe?: string|null; instrument?: string|null }, similarity?: number }>;
}) {
  // Build absolute URLs, including ORIGINAL chart images
  const targetOriginal = target.filename ? toAbs(`/uploads/${target.filename}`) : undefined;
  const imageParts: any[] = [
    ...(targetOriginal ? [{ type: 'image_url', image_url: { url: targetOriginal, detail: 'high' } }] : []),
    ...(target.depthMapPath ? [{ type: 'image_url', image_url: { url: toAbs(target.depthMapPath), detail: 'high' } }] : []),
    ...(target.edgeMapPath ? [{ type: 'image_url', image_url: { url: toAbs(target.edgeMapPath), detail: 'high' } }] : []),
    ...(target.gradientMapPath ? [{ type: 'image_url', image_url: { url: toAbs(target.gradientMapPath), detail: 'high' } }] : []),
  ];

  for (const { chart } of similars) {
    const simOriginal = chart.filename ? toAbs(`/uploads/${chart.filename}`) : undefined;
    if (simOriginal) imageParts.push({ type: 'image_url', image_url: { url: simOriginal, detail: 'high' } });
    if (chart.depthMapPath) imageParts.push({ type: 'image_url', image_url: { url: toAbs(chart.depthMapPath), detail: 'high' } });
    if (chart.edgeMapPath) imageParts.push({ type: 'image_url', image_url: { url: toAbs(chart.edgeMapPath), detail: 'high' } });
    if (chart.gradientMapPath) imageParts.push({ type: 'image_url', image_url: { url: toAbs(chart.gradientMapPath), detail: 'high' } });
  }

  const system: any = { role: 'system', content: currentPromptText };

  const userText = [
    'Analyze this chart.',
    // Include your dynamic bullet points / metadata if you have them…
    injectText || '', // <<<<<< VERY IMPORTANT: this is where "debugPromptId":"UP-123" gets injected
  ].filter(Boolean).join('\n\n');

  const user: any = {
    role: 'user',
    content: [
      { type: 'text', text: userText },
      ...imageParts,
    ],
  };

  return [system, user];
}